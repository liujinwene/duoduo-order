/**
 * This class is generated by jOOQ
 */
package com.duoduo.schema.tables;


import com.duoduo.schema.DuoduoOrder;
import com.duoduo.schema.Keys;
import com.duoduo.schema.tables.records.ShopRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Shop extends TableImpl<ShopRecord> {

    private static final long serialVersionUID = -647598083;

    /**
     * The reference instance of <code>duoduo_order.shop</code>
     */
    public static final Shop SHOP = new Shop();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShopRecord> getRecordType() {
        return ShopRecord.class;
    }

    /**
     * The column <code>duoduo_order.shop.id</code>.
     */
    public final TableField<ShopRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>duoduo_order.shop.shop_id</code>.
     */
    public final TableField<ShopRecord, String> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>duoduo_order.shop.shop_name</code>.
     */
    public final TableField<ShopRecord, String> SHOP_NAME = createField("shop_name", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>duoduo_order.shop.account</code>.
     */
    public final TableField<ShopRecord, String> ACCOUNT = createField("account", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>duoduo_order.shop.token</code>.
     */
    public final TableField<ShopRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.length(512), this, "");

    /**
     * The column <code>duoduo_order.shop.cookie</code>.
     */
    public final TableField<ShopRecord, String> COOKIE = createField("cookie", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>duoduo_order.shop.json_data</code>.
     */
    public final TableField<ShopRecord, String> JSON_DATA = createField("json_data", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>duoduo_order.shop</code> table reference
     */
    public Shop() {
        this("shop", null);
    }

    /**
     * Create an aliased <code>duoduo_order.shop</code> table reference
     */
    public Shop(String alias) {
        this(alias, SHOP);
    }

    private Shop(String alias, Table<ShopRecord> aliased) {
        this(alias, aliased, null);
    }

    private Shop(String alias, Table<ShopRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DuoduoOrder.DUODUO_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShopRecord, Long> getIdentity() {
        return Keys.IDENTITY_SHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShopRecord> getPrimaryKey() {
        return Keys.KEY_SHOP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShopRecord>> getKeys() {
        return Arrays.<UniqueKey<ShopRecord>>asList(Keys.KEY_SHOP_PRIMARY, Keys.KEY_SHOP_U_ACCOUNT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Shop as(String alias) {
        return new Shop(alias, this);
    }

    /**
     * Rename this table
     */
    public Shop rename(String name) {
        return new Shop(name, null);
    }
}
